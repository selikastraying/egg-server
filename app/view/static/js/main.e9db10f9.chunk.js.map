{"version":3,"sources":["logo.svg","components/post.jsx","components/newPost.jsx","services/NetServices.js","App.js","reportWebVitals.js","index.js"],"names":["Post","props","useState","title","post","content","newPost","setNewPost","handleOnChange","event","target","name","value","isUpdating","setIsUpdating","Card","Header","as","type","placeholder","defaultValue","onChange","className","Body","Text","Button","onClick","handleUpdate","_id","disabled","handleDelete","NewPost","style","height","Footer","handleInsert","apiClient","axios","create","baseURL","window","location","hostname","withCredentials","headers","Accept","timeout","App","posts","setPosts","fetchPost","get","then","res","data","reverse","useEffect","Navbar","fixed","bg","expand","src","logo","alt","Brand","href","map","delete","deletePost","put","updatePost","insertPost","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9db10f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Fragment, useState } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nfunction Post(props) {\r\n    const [newPost, setNewPost] = useState({title: props.post.title,content: props.post.content})\r\n    const handleOnChange = event => {\r\n      const { name, value } = event.target;\r\n      setNewPost({ ...newPost, [name]: value });\r\n    };\r\n    const [isUpdating, setIsUpdating] = useState(false) \r\n\r\n    return  <Fragment>\r\n            {\r\n            isUpdating?\r\n              <Card>\r\n                <Card.Header as=\"h4\">\r\n                  <input name=\"title\" type=\"text\" placeholder=\"enter Title\" defaultValue={props.post.title} onChange={handleOnChange} className=\"rounded\"></input>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <input name=\"content\" type=\"text\" placeholder=\"enter Content\" defaultValue={props.post.content} onChange={handleOnChange} className=\"rounded w-100 mr-3\"></input>\r\n                  </Card.Text>\r\n                  <Button className=\"mr-3\" onClick={() => {props.handleUpdate(props.post._id, newPost.title, newPost.content);setIsUpdating(!isUpdating);}} disabled={newPost.title === '' || newPost.content === ''}>確定</Button>\r\n                  <Button onClick={() => setIsUpdating(!isUpdating)}>取消</Button>\r\n                </Card.Body>\r\n              </Card>\r\n            :\r\n              <Card>\r\n                <Card.Header as=\"h4\">{props.post.title}</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    {props.post.content}\r\n                  </Card.Text>\r\n                  <Button className=\"mr-3\" onClick={() => setIsUpdating(!isUpdating)}>修改</Button>\r\n                  <Button onClick={() => {props.handleDelete(props.post._id)}}>刪除</Button>\r\n                </Card.Body>\r\n              </Card>\r\n            }\r\n            </Fragment>\r\n            \r\n}\r\n\r\nexport default Post;","import React, { Fragment, useState } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nfunction NewPost(props) {\r\n    const [newPost, setNewPost] = useState({title: '',content: ''})\r\n    const handleOnChange = event => {\r\n      const { name, value } = event.target;\r\n      setNewPost({ ...newPost, [name]: value });\r\n    };\r\n    const handleOnSubmit = () => {\r\n      props.handleInsert(newPost.title, newPost.content)\r\n      setNewPost({title: '',content: ''});\r\n    }\r\n\r\n    return  <Fragment>\r\n              <Card style={{ height: '100%' }}>\r\n                <Card.Header as=\"h4\">\r\n                  <input name=\"title\" type=\"text\" placeholder=\"enter Title\" onChange={handleOnChange} value={newPost.title} className=\"rounded\"></input>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <input name=\"content\" type=\"text\" placeholder=\"enter Content\" onChange={handleOnChange} value={newPost.content} className=\"rounded w-100 mr-3\" ></input>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                  <Button onClick={() => handleOnSubmit()} disabled={newPost.title === '' || newPost.content === ''}>發表</Button>\r\n                </Card.Footer>\r\n              </Card>\r\n            </Fragment>\r\n}\r\n\r\nexport default NewPost;","import axios from 'axios'\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: `http://${window.location.hostname}:7001/api/posts`,\r\n  withCredentials: false,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000,\r\n})\r\n\r\nexport default apiClient\r\n","import React, { useState, useEffect } from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport Post from './components/post.jsx'\nimport NewPost from './components/newPost.jsx'\nimport apiClient from './services/NetServices';\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const fetchPost = () => {\n    apiClient.get().then((res) => {\n      setPosts(res.data.reverse())\n    })\n  }\n  const deletePost = (_id) => {\n    apiClient.delete(`${_id}`).then(() => {\n      fetchPost()\n    })\n  }\n  const updatePost = (_id, title, content) => {\n    const data = {}\n    data['title'] = title\n    data['content'] = content\n    apiClient.put(`${_id}`, data).then(() => {\n      fetchPost()\n    })\n  }\n  const insertPost = (title, content) => {\n    const data = {}\n    data['title'] = title\n    data['content'] = content\n    apiClient.post('', data).then(() => {\n      fetchPost()\n    })\n  }\n  useEffect(() => {\n    fetchPost()\n  }, [])\n\n  return (\n    <div className=\"App pt-5\">\n        <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Navbar.Brand href=\"#\">留言板</Navbar.Brand>\n        </Navbar>\n        <div className=\"h-100 w-100\">\n          <div className=\"bg overflow-auto noscrollbar d-flex flex-column-reverse h-75 py-3\">\n            {\n              posts.map((post) => \n                <Post key={post._id}\n                      post={post} \n                      handleDelete={\n                        (_id) => {\n                          deletePost(_id)\n                        }\n                      }\n                      handleUpdate={\n                        (_id, title, content) => {\n                          updatePost(_id, title, content)\n                        }\n                      }>\n                </Post>)\n            }\n          </div>\n          <div className=\"h-25\">\n            <NewPost handleInsert={\n                (title, content) => {\n                  insertPost(title, content)\n                }\n              }>\n            </NewPost>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}